Istio
Introducing the Service Mesh
18:00 18 Apr 2018
Tags: microservice, devops, kubernetes, istio, service-mesh, proxy, envoy

Michael Lore
Principal Architect, SAP Concur
@ancientlore



* About Me

- Central Architecture Team at SAP Concur
- Designed the booking engine powering Concur Travel
- Playing with Go since 2010 (see [[https://github.com/ancientlore/go-avltree][go-avltree]])
- Interested in concurrent applications in the travel space
- ...which explains my interest in Go, microservices, and service mesh

.image media/gopher.png

[[https://twitter.com/ancientlore][@ancientlore]]
.link https://github.com/ancientlore/istio-talk

.background media/plane_bg.png



* Monolith to Microservices

.image media/deathstar.jpg

.caption Who isn't doing this?

.background media/plane_bg.png



* Simple, right?

.image media/istio-talk-1.png

.background media/plane_bg.png



* Not so fast...

.image media/istio-talk-2.png

.background media/plane_bg.png



* A polyglot world

.image media/istio-talk-3.png

.caption The microservices aren't so micro after all.

.background media/plane_bg.png



* Enter Istio: A Service Mesh

.image media/istio-talk-4.png

.background media/plane_bg.png



* What is Istio?

.link https://istio.io/

A complete framework for *connecting*, *securing*, *managing*, and *monitoring* services

Secure and monitor traffic for microservices *and* legacy services

An *open*platform* with key contributions from Google, IBM, Lyft, and others

*Multi-environment*and*multi-platform*, but Kubernetes first

.image media/istio.png

.background media/plane_bg.png



* Why are we interested in Istio?

- [[https://www.eugdpr.org/][Global Data Protection Regulation (GDPR)]]
- Zero-trust, automated mutual-TLS
- Deployment and routing strategies (canary)
- Circuit breakers, fault injection
- Observability and tracing
- Mesh expansion to legacy services
- Consistency within a polyglot environment

.image media/sap.png 32 _
.caption SAP is a [[https://www.cncf.io/announcement/2017/10/11/cloud-native-computing-foundation-welcomes-sap-platinum-member/][Platinum Member]] of the CNCF.

.background media/plane_bg.png



* Powered by Envoy

.link https://www.envoyproxy.io/
A C++ based L4/L7 proxy created and battle-tested at Lyft

- Dynamic service discovery
- Load balancing and traffic splitting
- TLS termination
- HTTP/2 first, gRPC proxying
- Circuit breakers and timeout handling
- Health checks, fault and delay injection

.image media/envoy.png

.background media/plane_bg.png



* Istio Architecture

.image media/istio-talk-5.png

.background media/plane_bg.png



* Istio Resources

Istio is configured via Kubernetes resources:

- Route Rules
- Destination Policies
- Ingress/Egress Rules

They are visible via `kubectl`:

	kubectl get routerules

You can also use `istioctl`, which provides better validation.

	istioctl get destinationpolicies

.background media/plane_bg.png



* Dashboard

.image media/grafana.png _ 900

.background media/plane_bg.png



* Service Graph

.image media/servicegraph.png _ 900

.background media/plane_bg.png



* Tracing

.image media/zipkin.png _ 900

.background media/plane_bg.png



* Things you still need to do

- Propagate headers between service calls.

	headersToCopy := []string{"x-request-id", "x-b3-traceid", "x-b3-spanid", "x-b3-parentspanid",
							  "x-b3-sampled", "x-b3-flags", "x-ot-span-context"}
	for _, h := range headersToCopy {
		val := fromRequest.Header.Get(h)
		if val != "" {
			toRequest.Header.Set(h, val)
		}
	}

- Handle *504*Gateway*Timeout* from timeouts.
- Handle *503*Service*Unavailable* from circuit breakers and _tune_them_.
- Inject the proxy into your pods using `istioctl`kube-inject` or run the automatic injector.

.caption Not totally free

.background media/plane_bg.png



* Demo - Traffic Shifting

.image trafficshifting/trafficshifting.png

.background media/plane_bg.png



* Demo - Resiliency

.image resiliency/resiliency.png

.background media/plane_bg.png



* Issues we discovered

.image media/bug.png _ 200

- Istio is progressing rapidly, but is still alpha.
- We encountered high CPU issues on larger clusters with many changes going on.
- Proxies are not updated instantly - you have to be careful to avoid some communication issues while rules propagate to the envoy instances.
- We have not tried mesh expansion - it looks like it needs to be flushed out further.

.background media/plane_bg.png



* Other good Istio Presentations

- Ray Tsang (@saturnism), [[https://speakerdeck.com/saturnism/making-microservices-micro-with-istio-service-mesh][Making Microservices Micro]]
- Matt Klein (@mattklein123), [[https://youtu.be/IeJDjq-COjk][The Mechanics of Deploying Envoy at Lyft]]

.background media/plane_bg.png



* Resources

[[https://istio.io/][istio.io]]

[[https://www.envoyproxy.io/][www.envoyproxy.io]]

Quick start on GKE:
[[https://istio.io/docs/setup/kubernetes/quick-start-gke-dm.html][istio.io/docs/setup/kubernetes/quick-start-gke-dm.html]]

This presentation, Kubernetes deployments, Istio code:
[[https://github.com/ancientlore/istio-talk][github.com/ancientlore/istio-talk]]

Demo code:
[[https://github.com/ancientlore/hurl][github.com/ancientlore/hurl]]
[[https://github.com/ancientlore/webnull][github.com/ancientlore/webnull]]
[[https://github.com/ancientlore/topdog][github.com/ancientlore/topdog]]

Utility for showing the demos:
[[https://github.com/ancientlore/demon][github.com/ancientlore/demon]]

.background media/plane_bg.png
